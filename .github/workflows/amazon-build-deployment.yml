name: AmazonDeployment

on:
  push: 
    branches:
      - 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
            touch .env
            echo VITE_API_KEY=${{secrets.FIREBASE_API_KEY}} >> .env
            echo VITE_AUTH_DOMAIN=${{secrets.FIREBASE_AUTH_DOMAIN}} >> .env
            echo VITE_DB_URL=${{secrets.FIREBASE_DB_URL}} >> .env
            echo VITE_PROJECT_ID=${{secrets.FIREBASE_PROJECT_ID}} >> .env
            echo VITE_STORAGE_BUCKET=${{secrets.FIREBASE_STORAGE_BUCKET}} >> .env
            echo VITE_MESSAGING_SENDER_ID=${{secrets.FIREBASE_MESSAGING_SENDER_ID}} >> .env
            echo VITE_APP_ID=${{secrets.FIREBASE_APP_ID}} >> .env
            echo VITE_MEASUREMENT_ID=${{secrets.FIREBASE_MEASUREMENT_ID}} >> .env
            echo VITE_EMAIL_SERVICE_ID=${{secrets.EMAIL_SERVICE_ID}} >> .env
            echo VITE_EMAIL_TEMPLATE_ID=${{secrets.EMAIL_TEMPLATE_ID}} >> .env
            echo VITE_EMAIL_PUBLIC_KEY=${{secrets.EMAIL_PUBLIC_KEY}} >> .env

      - name: Install dependencies
        run: yarn install
        
      - name: Build
        run: yarn build

      - name: S3 Deploy
        run: aws s3 sync ./dist s3://susim.online/ --acl bucket-owner-full-control
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-northeast-2'
          
      - name: Invalidate CloudFront Cache
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION_ID }}
          PATHS: /index.html /assets/*.css /assets/*.js
          AWS_REGION: 'ap-northeast-2'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          continue-on-error: true
